classDiagram
    direction LR
    class CellView {
        + CellView(double, double, double, double)
        + setGridLines(boolean) void
        + getFill() Color
        + setFill(Paint) void
        + resetStrokeColor() void
        # createShape(double, double) Shape
        + getShape() Shape
    }
    class GridView {
        + GridView(int, int, int, int, MainController)
        # initializeGrid() CellView[][]
        + getNumRows() int
        + getNumColumns() int
        + getHeight() int
        + getWidth() int
        + setOpacity(int, int, double) void
        + setGridLines(boolean) void
        + getCell(int, int) CellView
        + updateGridLinesColor() void
        + setColor(int, int, Paint) void
        + addCellTooltip(int, int, Grid, Simulation) void
    }
    class GridViewFactory {
        + GridViewFactory()
        + createCellView(CellShapeType, int, int, int, int, MainController) GridView
    }
    class HexagonCellView {
        + HexagonCellView(double, double, double, double)
        # createShape(double, double) Shape
    }
    class HexagonGridView {
        + HexagonGridView(int, int, int, int, MainController)
        # initializeGrid() CellView[][]
    }
    class RectangleCellView {
        + RectangleCellView(double, double, double, double)
        # createShape(double, double) Shape
    }
    class RectangleGridView {
        + RectangleGridView(int, int, int, int, MainController)
        # initializeGrid() CellView[][]
    }
    class TriangleCellView {
        + TriangleCellView(double, double, double, double)
        # createShape(double, double) Shape
    }
    class TriangleGridView {
        + TriangleGridView(int, int, int, int, MainController)
        # initializeGrid() CellView[][]
    }
    HexagonGridView --|> GridView
    TriangleGridView --|> GridView
    RectangleGridView --|> GridView
    GridView "1" *--> "grid *" CellView
    GridViewFactory ..> HexagonGridView: «create»
    GridViewFactory ..> RectangleGridView: «create»
    GridViewFactory ..> TriangleGridView: «create»
    HexagonCellView --> CellView
    HexagonGridView ..> HexagonCellView: «create»
    RectangleCellView --> CellView
    RectangleGridView ..> RectangleCellView: «create»
    TriangleCellView --> CellView
    TriangleGridView ..> TriangleCellView: «create»